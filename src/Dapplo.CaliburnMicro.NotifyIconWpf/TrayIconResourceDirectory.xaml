<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:caliburnMicro="clr-namespace:Dapplo.CaliburnMicro;assembly=Dapplo.CaliburnMicro"
                    xmlns:cmMenu="clr-namespace:Dapplo.CaliburnMicro.Menu;assembly=Dapplo.CaliburnMicro.Menu"
                    xmlns:security="clr-namespace:Dapplo.CaliburnMicro.Security.Behaviors;assembly=Dapplo.CaliburnMicro.Security"
                    xmlns:converters="clr-namespace:Dapplo.CaliburnMicro.Converters;assembly=Dapplo.CaliburnMicro"
                    xmlns:convertersSecurity="clr-namespace:Dapplo.CaliburnMicro.Security.Converters;assembly=Dapplo.CaliburnMicro.Security">
    <Style x:Key="TrayContextMenu" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TrayMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <converters:HasInterfaceConverter x:Key="HasInterfaceConverter"/>
            <convertersSecurity:AuthenticationTargetPropertyConverter x:Key="AuthenticationTargetPropertyConverter" />
            <ControlTemplate x:Key="MenuSeparatorTemplate">
                <Separator />
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Tag" Value="{Binding}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibility} }" />
        <Setter Property="Icon" Value="{Binding Icon}" />
        <Setter Property="Header" Value="{Binding DisplayName}" />
        <Setter Property="ItemsSource" Value="{Binding ChildNodes}" />
        <Setter Property="InputGestureText" Value="{Binding HotKeyHint}" />
        <Setter Property="cal:Action.TargetWithoutContext" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=.,Converter={StaticResource HasInterfaceConverter}, ConverterParameter={x:Type caliburnMicro:ICanBeClicked}}" Value="True">
                <Setter Property="cal:Message.Attach" Value="Click($originalDataContext)" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Style}" Value="{x:Static cmMenu:MenuItemStyles.Separator}">
                <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Style}" Value="{x:Static cmMenu:MenuItemStyles.Title}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Converter={StaticResource AuthenticationTargetPropertyConverter}}"
                                     Value="{x:Static security:AuthenticationTargetProperties.Visibility}">
                <Setter Property="security:AuthenticationVisibility.Permissions" Value="{Binding Permissions}" />
                <Setter Property="security:AuthenticationVisibility.WhenPermissions" Value="{Binding WhenPermission}" />
                <Setter Property="security:AuthenticationVisibility.WhenPermissionsMissing" Value="{Binding WhenPermissionMissing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Converter={StaticResource AuthenticationTargetPropertyConverter}}" Value="{x:Static security:AuthenticationTargetProperties.IsEnabled}">
                <Setter Property="security:AuthenticationEnabled.Permissions" Value="{Binding Permissions}" />
                <Setter Property="security:AuthenticationEnabled.WhenPermissions" Value="{Binding WhenPermission}" />
                <Setter Property="security:AuthenticationEnabled.WhenPermissionsMissing" Value="{Binding WhenPermissionMissing}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>